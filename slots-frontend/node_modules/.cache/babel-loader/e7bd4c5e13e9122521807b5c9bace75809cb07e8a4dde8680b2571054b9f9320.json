{"ast":null,"code":"import React,{useState,useEffect,useCallback}from\"react\";import axios from\"axios\";import\"./Game.css\";import backgroundImage from\"../assets/images/p_9.jpg\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const apiURL=process.env.REACT_APP_API_URL||'http://3.24.50.90:3000/api';const Game=_ref=>{let{token,onLogout}=_ref;const[username,setUsername]=useState(null);const[slots,setSlots]=useState([[],[],[]]);const[spinning,setSpinning]=useState(false);const[win,setWin]=useState(false);const[reward,setReward]=useState(0);const[coins,setCoins]=useState(0);const[betAmount,setBetAmount]=useState(100);const[allPokemonImages,setAllPokemonImages]=useState([]);const[message,setMessage]=useState(\"\");const[userId,setUserId]=useState(null);// ดึงข้อมูลโปรไฟล์ผู้ใช้\nconst fetchUserProfile=useCallback(async()=>{try{const response=await axios.get(`${apiURL}/user-profile`,{headers:{Authorization:`Bearer ${token}`}});setUsername(response.data.username);setCoins(response.data.coins);setUserId(response.data.id);}catch(error){console.error(\"Error fetching user profile:\",error);}},[token]);// ดึงข้อมูลภาพโปเกมอนทั้งหมด\nconst fetchAllImages=async()=>{try{const response=await axios.get(`${apiURL}/all-pokemon-images`);const images=response.data.map(pokemon=>({name:pokemon.name,image:pokemon.image,reward:pokemon.reward}));setAllPokemonImages(images);const initialSlots=Array.from({length:3},()=>Array.from({length:3},()=>images[Math.floor(Math.random()*images.length)]));setSlots(initialSlots);}catch(error){console.error(\"Error fetching all images:\",error);}};useEffect(()=>{fetchUserProfile();fetchAllImages();},[fetchUserProfile]);const randomizeSlots=()=>{const randomSlots=Array.from({length:3},()=>Array.from({length:3},()=>allPokemonImages[Math.floor(Math.random()*allPokemonImages.length)]));setSlots(randomSlots);};// ฟังก์ชันสำหรับบันทึกการหมุน\nconst recordSpin=async(amount,winAmount)=>{try{await axios.post(`${apiURL}/record-spin`,{bet_amount:amount,win_amount:winAmount},{headers:{Authorization:`Bearer ${token}`}});console.log(\"Spin successfully recorded.\");}catch(error){console.error(\"Error recording spin:\",error);}};// ฟังก์ชันสำหรับอัปเดตยอดเงิน\nconst updateBalance=async balance=>{try{const response=await axios.post(`${apiURL}/update-balance`,{user_id:userId,balance,action_type:\"game_update\"},{headers:{Authorization:`Bearer ${token}`}});setCoins(response.data.user.new_balance);// อัปเดตยอดเงินใน state\nconsole.log(\"Balance updated successfully:\",response.data);}catch(error){console.error(\"Error updating balance:\",error);}};// ฟังก์ชันสำหรับการหมุนสล็อต\nconst spinSlot=async()=>{if(spinning||coins<betAmount){alert(\"คุณไม่มียอดเงินเพียงพอในการหมุน กรุณาเติมเงิน\");return;}setSpinning(true);setWin(false);setReward(0);setMessage(\"Good Luck!\");const newCoins=coins-betAmount;setCoins(newCoins);// หักยอดเดิมพันออกจากยอดเงิน\nawait updateBalance(-betAmount);const intervalId=setInterval(randomizeSlots,100);try{const response=await axios.post(`${apiURL}/spin-slot`,{betAmount},{headers:{Authorization:`Bearer ${token}`}});const{slots:newSlots,reward:calculatedReward}=response.data;setTimeout(async()=>{clearInterval(intervalId);setSlots(newSlots);setSpinning(false);if(calculatedReward>0){setWin(true);setReward(calculatedReward);setMessage(`You Win! Reward: ${calculatedReward}`);await updateBalance(calculatedReward);// เพิ่มรางวัล\n}else{setMessage(\"You Lose! Try again.\");}// บันทึกการหมุนในระบบ\nawait recordSpin(betAmount,calculatedReward);},2000);}catch(error){console.error(\"Error spinning slot:\",error);clearInterval(intervalId);setSpinning(false);setMessage(\"An error occurred. Please try again.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",style:{backgroundImage:`url(${backgroundImage})`},children:[/*#__PURE__*/_jsx(\"h1\",{className:\"game-title\",children:\"Pok\\xE9mon Slot Machine\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"welcome-message\",children:[\"Welcome: \",username]}),/*#__PURE__*/_jsxs(\"p\",{className:\"coin-display\",children:[\"Coins: \",Math.floor(coins)]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E40\\u0E07\\u0E34\\u0E19\\u0E40\\u0E14\\u0E34\\u0E21\\u0E1E\\u0E31\\u0E19: \"}),/*#__PURE__*/_jsxs(\"select\",{value:betAmount,onChange:e=>setBetAmount(Number(e.target.value)),children:[/*#__PURE__*/_jsx(\"option\",{value:100,children:\"100\"}),/*#__PURE__*/_jsx(\"option\",{value:200,children:\"200\"}),/*#__PURE__*/_jsx(\"option\",{value:300,children:\"300\"}),/*#__PURE__*/_jsx(\"option\",{value:500,children:\"500\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"slot-machine\",children:slots.map((row,rowIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"slot-row\",children:row.map((slot,colIndex)=>/*#__PURE__*/_jsx(\"div\",{className:`slot ${spinning?\"spinning\":\"\"}`,children:/*#__PURE__*/_jsx(\"img\",{src:slot.image,alt:slot.name,className:\"pokemon-image\"})},colIndex))},rowIndex))}),/*#__PURE__*/_jsx(\"button\",{onClick:spinSlot,disabled:spinning,className:\"spin-button\",children:spinning?\"Spinning...\":\"Spin!\"}),message&&/*#__PURE__*/_jsx(\"p\",{className:`win-message ${win?\"win\":\"lose\"}`,children:message})]});};export default Game;","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","backgroundImage","jsx","_jsx","jsxs","_jsxs","apiURL","process","env","REACT_APP_API_URL","Game","_ref","token","onLogout","username","setUsername","slots","setSlots","spinning","setSpinning","win","setWin","reward","setReward","coins","setCoins","betAmount","setBetAmount","allPokemonImages","setAllPokemonImages","message","setMessage","userId","setUserId","fetchUserProfile","response","get","headers","Authorization","data","id","error","console","fetchAllImages","images","map","pokemon","name","image","initialSlots","Array","from","length","Math","floor","random","randomizeSlots","randomSlots","recordSpin","amount","winAmount","post","bet_amount","win_amount","log","updateBalance","balance","user_id","action_type","user","new_balance","spinSlot","alert","newCoins","intervalId","setInterval","newSlots","calculatedReward","setTimeout","clearInterval","className","style","children","value","onChange","e","Number","target","row","rowIndex","slot","colIndex","src","alt","onClick","disabled"],"sources":["/app/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport \"./Game.css\";\nimport backgroundImage from \"../assets/images/p_9.jpg\";\n\nconst apiURL = process.env.REACT_APP_API_URL || 'http://3.24.50.90:3000/api';\n\ninterface GameProps {\n  token: string;\n  onLogout: () => void;\n}\n\ninterface SlotResult {\n  name: string;\n  image: string;\n  reward: number;\n}\n\nconst Game: React.FC<GameProps> = ({ token, onLogout }) => {\n  const [username, setUsername] = useState<string | null>(null);\n  const [slots, setSlots] = useState<SlotResult[][]>([[], [], []]);\n  const [spinning, setSpinning] = useState(false);\n  const [win, setWin] = useState(false);\n  const [reward, setReward] = useState(0);\n  const [coins, setCoins] = useState<number>(0);\n  const [betAmount, setBetAmount] = useState<number>(100);\n  const [allPokemonImages, setAllPokemonImages] = useState<SlotResult[]>([]);\n  const [message, setMessage] = useState<string>(\"\");\n  const [userId, setUserId] = useState<number | null>(null);\n\n  // ดึงข้อมูลโปรไฟล์ผู้ใช้\n  const fetchUserProfile = useCallback(async () => {\n    try {\n      const response = await axios.get(`${apiURL}/user-profile`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setUsername(response.data.username);\n      setCoins(response.data.coins);\n      setUserId(response.data.id);\n    } catch (error) {\n      console.error(\"Error fetching user profile:\", error);\n    }\n  }, [token]);\n\n  // ดึงข้อมูลภาพโปเกมอนทั้งหมด\n  const fetchAllImages = async () => {\n    try {\n      const response = await axios.get(`${apiURL}/all-pokemon-images`);\n      const images = response.data.map((pokemon: { name: string; image: string; reward: number }) => ({\n        name: pokemon.name,\n        image: pokemon.image,\n        reward: pokemon.reward,\n      }));\n      setAllPokemonImages(images);\n      const initialSlots = Array.from({ length: 3 }, () =>\n        Array.from({ length: 3 }, () => images[Math.floor(Math.random() * images.length)])\n      );\n      setSlots(initialSlots);\n    } catch (error) {\n      console.error(\"Error fetching all images:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserProfile();\n    fetchAllImages();\n  }, [fetchUserProfile]);\n\n  const randomizeSlots = () => {\n    const randomSlots = Array.from({ length: 3 }, () =>\n      Array.from({ length: 3 }, () => allPokemonImages[Math.floor(Math.random() * allPokemonImages.length)])\n    );\n    setSlots(randomSlots);\n  };\n\n  // ฟังก์ชันสำหรับบันทึกการหมุน\n  const recordSpin = async (amount: number, winAmount: number) => {\n    try {\n      await axios.post(\n        `${apiURL}/record-spin`,\n        { bet_amount: amount, win_amount: winAmount },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      console.log(\"Spin successfully recorded.\");\n    } catch (error) {\n      console.error(\"Error recording spin:\", error);\n    }\n  };\n\n  // ฟังก์ชันสำหรับอัปเดตยอดเงิน\n  const updateBalance = async (balance: number) => {\n    try {\n      const response = await axios.post(\n        `${apiURL}/update-balance`,\n        { user_id: userId, balance, action_type: \"game_update\" },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      setCoins(response.data.user.new_balance); // อัปเดตยอดเงินใน state\n      console.log(\"Balance updated successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error updating balance:\", error);\n    }\n  };\n\n  // ฟังก์ชันสำหรับการหมุนสล็อต\n  const spinSlot = async () => {\n    if (spinning || coins < betAmount) {\n      alert(\"คุณไม่มียอดเงินเพียงพอในการหมุน กรุณาเติมเงิน\");\n      return;\n    }\n\n    setSpinning(true);\n    setWin(false);\n    setReward(0);\n    setMessage(\"Good Luck!\");\n\n    const newCoins = coins - betAmount;\n    setCoins(newCoins);\n\n    // หักยอดเดิมพันออกจากยอดเงิน\n    await updateBalance(-betAmount);\n\n    const intervalId = setInterval(randomizeSlots, 100);\n\n    try {\n      const response = await axios.post(\n        `${apiURL}/spin-slot`,\n        { betAmount },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      const { slots: newSlots, reward: calculatedReward } = response.data;\n\n      setTimeout(async () => {\n        clearInterval(intervalId);\n        setSlots(newSlots);\n        setSpinning(false);\n\n        if (calculatedReward > 0) {\n          setWin(true);\n          setReward(calculatedReward);\n          setMessage(`You Win! Reward: ${calculatedReward}`);\n          await updateBalance(calculatedReward); // เพิ่มรางวัล\n        } else {\n          setMessage(\"You Lose! Try again.\");\n        }\n\n        // บันทึกการหมุนในระบบ\n        await recordSpin(betAmount, calculatedReward);\n      }, 2000);\n    } catch (error) {\n      console.error(\"Error spinning slot:\", error);\n      clearInterval(intervalId);\n      setSpinning(false);\n      setMessage(\"An error occurred. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"game-container\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n      <h1 className=\"game-title\">Pokémon Slot Machine</h1>\n      <p className=\"welcome-message\">Welcome: {username}</p>\n      <p className=\"coin-display\">Coins: {Math.floor(coins)}</p>\n      <div>\n        <label>เลือกจำนวนเงินเดิมพัน: </label>\n        <select value={betAmount} onChange={(e) => setBetAmount(Number(e.target.value))}>\n          <option value={100}>100</option>\n          <option value={200}>200</option>\n          <option value={300}>300</option>\n          <option value={500}>500</option>\n        </select>\n      </div>\n\n      <div className=\"slot-machine\">\n        {slots.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"slot-row\">\n            {row.map((slot, colIndex) => (\n              <div key={colIndex} className={`slot ${spinning ? \"spinning\" : \"\"}`}>\n                <img\n                  src={slot.image}\n                  alt={slot.name}\n                  className=\"pokemon-image\"\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      <button onClick={spinSlot} disabled={spinning} className=\"spin-button\">\n        {spinning ? \"Spinning...\" : \"Spin!\"}\n      </button>\n\n      {message && (\n        <p className={`win-message ${win ? \"win\" : \"lose\"}`}>\n          {message}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}